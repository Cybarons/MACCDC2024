#!/bin/bash

# Check if script is run as root
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

# Function to configure firewall using iptables
configure_iptables() {
    # Flush existing rules and set default policies
    iptables -F
    iptables -X
    iptables -Z
    iptables -P INPUT DROP
    iptables -P FORWARD DROP
    iptables -P OUTPUT ACCEPT

    # Allow loopback traffic
    iptables -A INPUT -i lo -j ACCEPT
    iptables -A OUTPUT -o lo -j ACCEPT

    # Allow incoming HTTP (port 80) traffic
    iptables -A INPUT -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 443) traffic
    iptables -A INPUT -p tcp --dport 443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 443 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTP (port 25) traffic
    iptables -A INPUT -p tcp --dport 25 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 25 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 587) traffic
    iptables -A INPUT -p tcp --dport 587 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 587 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTP (port 465) traffic
    iptables -A INPUT -p tcp --dport 465 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 465 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 2525) traffic
    iptables -A INPUT -p tcp --dport 2525 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 2525 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTP (port 53) traffic
    iptables -A INPUT -p tcp --dport 53 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 53 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 110) traffic
    iptables -A INPUT -p tcp --dport 110 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 110 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTP (port 995) traffic
    iptables -A INPUT -p tcp --dport 995 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 995 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 20) traffic
    iptables -A INPUT -p tcp --dport 20 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 20 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTP (port 21) traffic
    iptables -A INPUT -p tcp --dport 21 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 21 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 69) traffic
    iptables -A INPUT -p tcp --dport 69 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 69 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Allow incoming HTTPS (port 123) traffic
    iptables -A INPUT -p tcp --dport 123 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp --sport 123 -m conntrack --ctstate ESTABLISHED -j ACCEPT

    # Save rules to persist across reboots (Ubuntu 18.04+)
    iptables-save > /etc/iptables/rules.v4

    # Display current rules
    iptables -L -v
}


# Function to configure firewall using ufw
configure_ufw() {
    # Enable ufw and allow SSH and HTTP
    ufw enable
    ufw allow out http
    ufw allow in http
    ufw allow out https
    ufw allow in https
    ufw allow out smtp
    ufw allow in smtp
    ufw allow out 53/udp
    ufw allow in 53/udp
    ufw allow out pop3
    ufw allow in pop3
    ufw allow out ftp
    ufw allow in ftp
    ufw allow out tftp
    ufw allow in tftp
    ufw allow out ntp
    ufw allow in ntp
    ufw status verbose
}


# Main function
main() {
    # Check if iptables is available
    if command -v iptables &> /dev/null; then
        echo "Configuring firewall using iptables..."
        configure_iptables
        configure_ufw
    else
        echo "Error: iptables is not available on this system"
        exit 1
    fi
}

# Run the main function
main