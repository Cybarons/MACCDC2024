#!/bin/bash

# Check if script is run as root
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

# Function to restrict user access
restrict_user_access() {
    # Check if array of usernames is provided
    if [ $# -eq 0 ]; then
        echo "Error: No usernames provided"
        exit 1
    fi

    # Allow root and specified users
    allowed_users=("$@")
    allowed_uids=()
    for user in "${allowed_users[@]}"; do
        allowed_uids+=($(id -u "$user"))
    done

    # Restrict all other users
    for user in $(getent passwd | awk -F ':' '{print $1}'); do
        if [ "$user" != "root" ] && ! [[ "${allowed_users[@]}" =~ "$user" ]]; then
            user_uid=$(id -u "$user")
            if ! [[ "${allowed_uids[@]}" =~ "$user_uid" ]]; then
                usermod -s /sbin/nologin "$user"
                echo "User '$user' access restricted"
            fi
        fi
    done
}

# Main function
main() {
    # Prompt for usernames to keep accessible
    declare -a allowed_users
    while true; do
        read -p "Enter the username to allow access (or leave blank to finish): " username
        if [ -z "$username" ]; then
            break
        fi
        allowed_users+=("$username")
    done

    # Check if at least one username is provided
    if [ ${#allowed_users[@]} -eq 0 ]; then
        echo "Error: No usernames provided"
        exit 1
    fi

    restrict_user_access "${allowed_users[@]}"
}

# Run the main function
main
